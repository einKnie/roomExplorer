/******************************************************************************
 *   _____
 *  |  __ \
 *  | |__) |___   ___  _ __ ___
 *  |  _  // _ \ / _ \| '_ ` _ \
 *  | | \ \ (_) | (_) | | | | | |
 *  |_|__\_\___/ \___/|_| |_| |_|
 *  |  ____|          | |
 *  | |__  __  ___ __ | | ___  _ __ ___ _ __
 *  |  __| \ \/ / '_ \| |/ _ \| '__/ _ \ '__|
 *  | |____ >  <| |_) | | (_) | | |  __/ |
 *  |______/_/\_\ .__/|_|\___/|_|  \___|_|
 *              | | <einKnie@gmx.at>
 *              |_| v0.2
 *****************************************************************************/

 #include "helper.h"
 #include <string.h>

 bool startsWithVowel(const char *buf) {
   return (
     ((buf[0] == 'a') || buf[0] == 'A') ||
     ((buf[0] == 'e') || buf[0] == 'E') ||
     ((buf[0] == 'i') || buf[0] == 'I') ||
     ((buf[0] == 'o') || buf[0] == 'O') ||
     ((buf[0] == 'u') || buf[0] == 'U')
   );
 }

 bool endsWithPlural(const char *buf) {
   return (
     (buf[strlen(buf) - 1] == 's') &&
     (buf[strlen(buf) - 2] == 'e')
   );
 }
